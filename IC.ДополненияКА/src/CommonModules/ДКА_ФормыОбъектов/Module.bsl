//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		
#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриСозданииНаСервере_НоменклатураФормаЭлемента(Форма) Экспорт

	Возврат;
	
	// Отказ от изменения формы при отключенном использовании каталога автомобилей или не заданных
	// значениях констант АА_СвойствоКодыОтбора, АА_СвойствоНаименованиеПолное, АА_СвойствоНаименованиеРабочее или
	// АА_СвойствоОграничениеПрименимости
	//@skip-check unreachable-statement
	Если ПолучитьФункциональнуюОпцию("АА_ИспользоватьКаталогАвтомобилей") Тогда
		
		// Получение свойств, необходимых для корректного использования автокаталога
		СвойствоКодыОтбора = ПараметрыСеанса.АА_СвойствоКодыОтбора;
		СвойствоНаименованиеПолное = ПараметрыСеанса.АА_СвойствоНаименованиеПолное;
		СвойствоНаименованиеРабочее = ПараметрыСеанса.АА_СвойствоНаименованиеРабочее;
		СвойствоОграничениеПрименимости = ПараметрыСеанса.АА_СвойствоОграничениеПрименимости;

		// Проверка заполнения требуемых констант
		Если Не ЗначениеЗаполнено(СвойствоКодыОтбора)
			 Или Не ЗначениеЗаполнено(СвойствоНаименованиеПолное)
			 Или Не ЗначениеЗаполнено(СвойствоНаименованиеРабочее)
			 Или Не ЗначениеЗаполнено(СвойствоОграничениеПрименимости) Тогда
			Возврат;
		КонецЕсли;

		// Проверка наличия свойства
		ТаблицаСвойств = Форма.Свойства_ОписаниеДополнительныхРеквизитов;
		Если ТаблицаСвойств.НайтиСтроки(Новый Структура("Свойство", СвойствоНаименованиеРабочее)).Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

	Иначе
		Возврат;
	КонецЕсли;

	// Текстовые константы
	ИмяГруппыСтраницы = "СтраницыКарточкаНоменклатуры";
	ИмяСтраницыКаталога = "АА_СтраницаАвтокаталог";
	ИмяЛевойПанели = "АА_ЛеваяПанель";
	ИмяПравойПанели = "АА_ПраваяПанель";
	ИмяРеквизитаДерево = "АА_ДеревоКаталог";
	ИмяПодменю = "АА_МенюАвтокаталог";

	// Разыменования
	ТЧДопРеквизиты = Форма.Объект.ДополнительныеРеквизиты;
	
	// Создание реквизитов формы со свойствами
	НовыеРеквизиты = Новый Массив;

	ОписаниеТипаДопРеквизит = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения");

	НовыеРеквизиты.Добавить(Новый РеквизитФормы("АА_СвойствоКодыОтбора", ОписаниеТипаДопРеквизит));
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("АА_СвойствоНаименованиеРабочее", ОписаниеТипаДопРеквизит));
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("АА_СвойствоНаименованиеПолное", ОписаниеТипаДопРеквизит));
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("АА_СвойствоОграничениеПрименимости", ОписаниеТипаДопРеквизит));
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("АА_Использование", Новый ОписаниеТипов("Булево")));

	// Получение кодов отбора для текущей номенклатуры (значение доп.реквизита АА_ДР_КодыОтбора)
	ЗначенияСвойствКодыОтбора = ТЧДопРеквизиты.НайтиСтроки(Новый Структура("Свойство", СвойствоКодыОтбора));
	СписокШифров = ?(ЗначенияСвойствКодыОтбора.Количество() > 0, ЗначенияСвойствКодыОтбора[0].Значение, " ");

	// Заполнение дерева
	ДеревоБуфер = Справочники.АА_КаталогАвтомобилей.ЗаполнитьДеревоМоделей(СписокШифров, "", Истина);
	
	// Добавление реквизита ДеревоКаталог
	ДеревоКаталог = Новый РеквизитФормы(ИмяРеквизитаДерево, Новый ОписаниеТипов("ДеревоЗначений"));
	НовыеРеквизиты.Добавить(ДеревоКаталог);

	Для Каждого Элемент Из ДеревоБуфер.Колонки Цикл

		НовыйРеквизит = Новый РеквизитФормы(Элемент.Имя,
											Новый ОписаниеТипов(Элемент.ТипЗначения, , "NULL"),
											ИмяРеквизитаДерево);
		НовыеРеквизиты.Добавить(НовыйРеквизит);

	КонецЦикла;

	Форма.ИзменитьРеквизиты(НовыеРеквизиты);

	// Заполнение реквизитов
	Форма["АА_СвойствоКодыОтбора"] = СвойствоКодыОтбора;
	Форма["АА_СвойствоНаименованиеРабочее"] = СвойствоНаименованиеРабочее;
	Форма["АА_СвойствоНаименованиеПолное"] = СвойствоНаименованиеПолное;
	Форма["АА_СвойствоОграничениеПрименимости"] = СвойствоОграничениеПрименимости;

	Форма["АА_Использование"] = Истина;

	Форма.ЗначениеВРеквизитФормы(ДеревоБуфер, ИмяРеквизитаДерево);
	
	// Добавление команды формы
	КомандаИзменить = Форма.Команды.Добавить("АА_ИзменитьПривязкуКАвтокаталогу");
	КомандаИзменить.Заголовок = "Изменить...";
	КомандаИзменить.Действие = "АА_ИзменитьПривязкуКАвтокаталогу";
	
	// Добавление страницы формы
	Страницы = Форма.Элементы[ИмяГруппыСтраницы];
	СтраницаКаталога = Форма.Элементы.Вставить(ИмяСтраницыКаталога, Тип("ГруппаФормы"), Страницы);
	СтраницаКаталога.Вид = ВидГруппыФормы.Страница;
	СтраницаКаталога.Заголовок = "Автокаталог";
	СтраницаКаталога.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	
	
	// Добавление дочерних групп
	ЛеваяПанель = Форма.Элементы.Вставить(ИмяЛевойПанели, Тип("ГруппаФормы"), СтраницаКаталога);
	ЛеваяПанель.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЛеваяПанель.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЛеваяПанель.ОтображатьЗаголовок = Ложь;

	ПраваяПанель = Форма.Элементы.Вставить(ИмяПравойПанели, Тип("ГруппаФормы"), СтраницаКаталога);
	ПраваяПанель.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ПраваяПанель.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ПраваяПанель.ОтображатьЗаголовок = Ложь;
	
//	// Добавление кнопки "Изменить"
//	ЭлементКнопкаИзменить = Форма.Элементы.Вставить("ИзменитьПоАвтокаталогу", Тип("КнопкаФормы"), ЛеваяПанель);
//	ЭлементКнопкаИзменить.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
////	ЭлементКнопкаИзменить.Заголовок = "Изменить...";
//	ЭлементКнопкаИзменить.ИмяКоманды = "АА_ИзменитьПривязкуКАвтокаталогу";

	// Добавление таблицы формы "Список"
	Список = Форма.Элементы.Вставить(ИмяРеквизитаДерево, Тип("ТаблицаФормы"), ЛеваяПанель);
	Список.ПутьКДанным = ИмяРеквизитаДерево;
	Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
	Список.Шапка = Ложь;
	Список.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	Список.ИзменятьПорядокСтрок = Ложь;
	Список.ИзменятьСоставСтрок = Ложь;
	Список.ТолькоПросмотр = Истина;
	
	// Добавление группы колонок 
	ГруппаКолонок = Форма.Элементы.Вставить("АА_Группа", Тип("ГруппаФормы"), Список);
	ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	ГруппаКолонок.Группировка = ГруппировкаКолонок.ВЯчейке;
	
	// Добавление колонок в группу колонок
	Для Каждого Колонка Из ДеревоБуфер.Колонки Цикл

		ИмяКолонки = Колонка.Имя;

		Если ИмяКолонки = "Код" Или ИмяКолонки = "Ссылка" Или ИмяКолонки = "ДляОтбора" Тогда
			Продолжить;
		КонецЕсли;

		НовыйЭлемент = Форма.Элементы.Добавить(ИмяКолонки, Тип("ПолеФормы"), ГруппаКолонок);
		НовыйЭлемент.ПутьКДанным = СтрШаблон("%1.%2", Список.Имя, ИмяКолонки);
		НовыйЭлемент.РежимРедактирования = РежимРедактированияКолонки.Вход;

		Если ИмяКолонки = "Пометка" Тогда

			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;

			НовыйЭлемент.ТриСостояния = Истина;
			НовыйЭлемент.УстановитьДействие("ПриИзменении", "ФлажокПриИзменении");
			НовыйЭлемент.Видимость = Ложь;

		Иначе

			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;

		КонецЕсли;

	КонецЦикла;

	// Перенос командной панели
	Форма.Элементы.Переместить(Форма.Элементы[ИмяПодменю], ПраваяПанель);

	// Перенос дополнительных реквизитов
	ПереместитьДополнительныйРеквизит(Форма, СвойствоНаименованиеРабочее, ПраваяПанель, Истина);
	ПереместитьДополнительныйРеквизит(Форма, СвойствоНаименованиеПолное, ПраваяПанель, Истина);
	ПереместитьДополнительныйРеквизит(Форма, СвойствоКодыОтбора, ПраваяПанель, Истина);
	ПереместитьДополнительныйРеквизит(Форма, СвойствоОграничениеПрименимости, ПраваяПанель, Истина);

КонецПроцедуры

Процедура ПереместитьДополнительныйРеквизит(Форма, ДополнительныйРеквизит, ЦелеваяГруппа, ТолькоПросмотр = Ложь) Экспорт

	СписокСвойств = Форма.Свойства_ОписаниеДополнительныхРеквизитов;

	ОписанияДополнительныхРеквизитов = СписокСвойств.НайтиСтроки(Новый Структура("Свойство", ДополнительныйРеквизит));

	Если ОписанияДополнительныхРеквизитов.Количество() > 0 Тогда

		ИскомыйЭлементИмя = ОписанияДополнительныхРеквизитов[0].ИмяРеквизитаЗначение;
		ИскомыйЭлемент = Форма.Элементы[ИскомыйЭлементИмя];
//		ИскомыйЭлемент.ТолькоПросмотр = ТолькоПросмотр;
		ИскомыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;

		Форма.Элементы.Переместить(ИскомыйЭлемент, ЦелеваяГруппа);

	КонецЕсли;

КонецПроцедуры

Процедура ПриСозданииНаСервере_НоменклатураФормаСписка(Форма) Экспорт

	// Разыменование и константы
	Элементы = Форма.Элементы;

	ИмяРеквизитаПоказыватьЦеныИОстатки = "ДКА_РасширенныйПросмотр";

	ИмяРеквизитаСписокЦены = "ДКА_Цены";
	ИмяРеквизитаВидЦены = "ВидЦены";
	ИмяРеквизитаЦена = "Цена";

	ИмяРеквизитаСписокОстатки = "ДКА_Остатки";
	ИмяРеквизитаОстаткиСклад = "Склад";
	ИмяРеквизитаОстаткиСвободно = "Свободно";
	ИмяРеквизитаОстаткиВРезерве = "ВРезерве";
	ИмяРеквизитаОстаткиВПути = "ВПути";

	ИмяРеквизитаСписокЗапасы = "ДКА_Запасы";
	ИмяРеквизитаЗапасыСклад = "ЗапасыСклад";
	ИмяРеквизитаЗапасыMin = "min";
	ИмяРеквизитаЗапасыMax = "max";

	ИмяРеквизитаПрименимость = "ДКА_Применимость";
	ИмяРеквизитаАдресКартинки = "ДКА_АдресКартинки";

	ИмяГруппыЗаголовка = "ДКА_ПанельОстаткиЦеныЗаголовок";
	ИмяПодменю = "ДКА_ПодменюФормыСпискаНоменклатуры";
	ИмяПанели = "ДКА_ПанельОстаткиЦены";
	
	//
	// Создание реквизитов формы
	//

	ДобавляемыеРеквизиты = Новый Массив;

	// ДКА_РасширенныйПросмотр (булево), флаг отображения панели
	ПоказыватьЦеныИОстатки = Новый РеквизитФормы(ИмяРеквизитаПоказыватьЦеныИОстатки,
												 Новый ОписаниеТипов("Булево"),
												 ,
												 ,
												 Истина);
	// ДКА_Цены, таблица значений, виды цен и цены
	СписокЦены = Новый РеквизитФормы(ИмяРеквизитаСписокЦены, Новый ОписаниеТипов("ТаблицаЗначений"));
	СписокВидЦены = Новый РеквизитФормы(ИмяРеквизитаВидЦены,
										Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"),
										ИмяРеквизитаСписокЦены);
	СписокЦена = Новый РеквизитФормы(ИмяРеквизитаЦена,
									 ОбщегоНазначения.ОписаниеТипаЧисло(15, 2),
									 ИмяРеквизитаСписокЦены);
	// ДКА_Остатки, таблица значений, остатки на складах
	СписокОстатки = Новый РеквизитФормы(ИмяРеквизитаСписокОстатки, Новый ОписаниеТипов("ТаблицаЗначений"));
	СписокОстаткиСклад = Новый РеквизитФормы(ИмяРеквизитаОстаткиСклад,
											 Новый ОписаниеТипов("СправочникСсылка.Склады"),
											 ИмяРеквизитаСписокОстатки);
	СписокОстаткиСвободно = Новый РеквизитФормы(ИмяРеквизитаОстаткиСвободно,
												ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
												ИмяРеквизитаСписокОстатки);
	СписокОстаткиВРезерве = Новый РеквизитФормы(ИмяРеквизитаОстаткиВРезерве,
												ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
												ИмяРеквизитаСписокОстатки);
	СписокОстаткиВПути = Новый РеквизитФормы(ИмяРеквизитаОстаткиВПути,
											 ОбщегоНазначения.ОписаниеТипаЧисло(15, 3),
											 ИмяРеквизитаСписокОстатки);
	// ДКА_Запасы, таблица значений, min/max
	СписокЗапасы = Новый РеквизитФормы(ИмяРеквизитаСписокЗапасы, Новый ОписаниеТипов("ТаблицаЗначений"));
	СписокЗапасыСклад = Новый РеквизитФормы(ИмяРеквизитаЗапасыСклад,
											 Новый ОписаниеТипов("СправочникСсылка.Склады"),
											 ИмяРеквизитаСписокЗапасы);
	СписокЗапасыMin = Новый РеквизитФормы(ИмяРеквизитаЗапасыMin,
									 ОбщегоНазначения.ОписаниеТипаЧисло(10, 0),
									 ИмяРеквизитаСписокЗапасы);
	СписокЗапасыMax = Новый РеквизитФормы(ИмяРеквизитаЗапасыMax,
									 ОбщегоНазначения.ОписаниеТипаЧисло(10, 0),
									 ИмяРеквизитаСписокЗапасы);
	// ДКА_Применимость
	Применимость = Новый РеквизитФормы(ИмяРеквизитаПрименимость, ОбщегоНазначения.ОписаниеТипаСтрока(1024));

	// ДКА_АдресКартинки
	АдресКартинки = Новый РеквизитФормы(ИмяРеквизитаАдресКартинки, ОбщегоНазначения.ОписаниеТипаСтрока(0));
	
	// Добавление реквизитов формы
	ДобавляемыеРеквизиты.Добавить(ПоказыватьЦеныИОстатки);

	ДобавляемыеРеквизиты.Добавить(СписокЦены);
	ДобавляемыеРеквизиты.Добавить(СписокВидЦены);
	ДобавляемыеРеквизиты.Добавить(СписокЦена);

	ДобавляемыеРеквизиты.Добавить(СписокОстатки);
	ДобавляемыеРеквизиты.Добавить(СписокОстаткиСклад);
	ДобавляемыеРеквизиты.Добавить(СписокОстаткиСвободно);
	ДобавляемыеРеквизиты.Добавить(СписокОстаткиВРезерве);
	ДобавляемыеРеквизиты.Добавить(СписокОстаткиВПути);

	ДобавляемыеРеквизиты.Добавить(СписокЗапасы);
	ДобавляемыеРеквизиты.Добавить(СписокЗапасыСклад);
	ДобавляемыеРеквизиты.Добавить(СписокЗапасыMin);
	ДобавляемыеРеквизиты.Добавить(СписокЗапасыMax);

	ДобавляемыеРеквизиты.Добавить(Применимость);
	ДобавляемыеРеквизиты.Добавить(АдресКартинки);

	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	//
	//	Завершение создания реквизитов формы
	//

	// Чтение сохраненных настроек
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(Форма.КодФормы, "");

	Если Настройки <> Неопределено Тогда

		Если Настройки.Свойство(ИмяРеквизитаПоказыватьЦеныИОстатки) Тогда
			Форма[ИмяРеквизитаПоказыватьЦеныИОстатки] = Настройки[ИмяРеквизитаПоказыватьЦеныИОстатки];
		КонецЕсли;

	КонецЕсли;

	// Добавление группы (вертикальная группа без отображения на форме)
	ГруппаФормы = Элементы.Вставить(ИмяПанели,
									Тип("ГруппаФормы"),
									Элементы.ГруппаФормаТаблицы,
									Элементы.ГруппаПанельКатегорий);
	ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаФормы.ОтображатьЗаголовок = Ложь;
	ГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаФормы.Ширина = 29;

	ГруппаФормы.Видимость = Форма[ИмяРеквизитаПоказыватьЦеныИОстатки];
	
	// Добавление "Командной панели"
	ГруппаЗаголовок = Элементы.Вставить(ИмяГруппыЗаголовка, Тип("ГруппаФормы"), ГруппаФормы);
	ГруппаЗаголовок.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаЗаголовок.ОтображатьЗаголовок = Ложь;
	ГруппаЗаголовок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
//	ГруппаЗаголовок.Объединенная = Ложь;
	
	// Добавление надписи "Цены"
	ДекорацияЦены = Элементы.Добавить("ДКА_Цена", Тип("ДекорацияФормы"), ГруппаЗаголовок);
	ДекорацияЦены.Заголовок = "Цены";
	ДекорацияЦены.Ширина = 18;
	ДекорацияЦены.Шрифт = ШрифтыСтиля.ШрифтКнопкиВыполненияЗадачиОбычный;
	
	
	// Перенос командной панели
	Подменю = Элементы[ИмяПодменю];
	Элементы.Переместить(Подменю, ГруппаЗаголовок);
	Подменю.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Подменю.Ширина = 20;
	Подменю.РастягиватьПоГоризонтали = Истина;

	// Удаление подменю "Еще"	
	РодительКоманд = Элементы[ИмяПодменю + "Важное"];
	Для Каждого Эл Из РодительКоманд.ПодчиненныеЭлементы Цикл
		Эл.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанели;
		Эл.Отображение = ОтображениеКнопки.Картинка;
	КонецЦикла;
	
	// Добавление таблицы формы ДКА_Цены
	ТаблицаЦены = Элементы.Добавить(ИмяРеквизитаСписокЦены, Тип("ТаблицаФормы"), ГруппаФормы);
	ТаблицаЦены.ПутьКДанным = ИмяРеквизитаСписокЦены;
	ТаблицаЦены.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаЦены.АвтоМаксимальнаяВысота = Истина;
	ТаблицаЦены.ВысотаВСтрокахТаблицы = 6;
	ТаблицаЦены.АвтоМаксимальнаяВысотаВСтрокахТаблицы = Истина;
	ТаблицаЦены.ВертикальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.НеИспользовать;
	ТаблицаЦены.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ТаблицаЦены.ЧередованиеЦветовСтрок = Истина;
	ТаблицаЦены.Шапка = Ложь;
	ТаблицаЦены.ТолькоПросмотр = Истина;
	ТаблицаЦены.Ширина = 28;
	ТаблицаЦены.Подсказка = "Цены номенклатуры.
							|Возможно настроить виды отображаемых цен";

	КолонкаВидЦены = Элементы.Добавить(ИмяРеквизитаВидЦены, Тип("ПолеФормы"), ТаблицаЦены);
	КолонкаВидЦены.ПутьКДанным = ИмяРеквизитаСписокЦены + "." + ИмяРеквизитаВидЦены;
	КолонкаВидЦены.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;

	КолонкаЦена = Элементы.Добавить(ИмяРеквизитаЦена, Тип("ПолеФормы"), ТаблицаЦены);
	КолонкаЦена.ПутьКДанным = ИмяРеквизитаСписокЦены + "." + ИмяРеквизитаЦена;
	КолонкаЦена.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;

	// Добавление таблицы формы ДКА_Остатки
	ТаблицаОстатки = Элементы.Добавить(ИмяРеквизитаСписокОстатки, Тип("ТаблицаФормы"), ГруппаФормы);
	ТаблицаОстатки.ПутьКДанным = ИмяРеквизитаСписокОстатки;
	ТаблицаОстатки.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаОстатки.АвтоМаксимальнаяВысота = Истина;
	ТаблицаОстатки.ВысотаВСтрокахТаблицы = 6;
	ТаблицаОстатки.АвтоМаксимальнаяВысотаВСтрокахТаблицы = Истина;
	ТаблицаОстатки.ВертикальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.НеИспользовать;
	ТаблицаОстатки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	ТаблицаОстатки.Заголовок = НСтр("ru = 'Остатки и доступность'");
	ТаблицаОстатки.ШрифтЗаголовка = ШрифтыСтиля.ШрифтКнопкиВыполненияЗадачиОбычный;
	ТаблицаОстатки.ЧередованиеЦветовСтрок = Истина;
	ТаблицаОстатки.ТолькоПросмотр = Истина;
	ТаблицаОстатки.Ширина = 28;

	КолонкаОстаткиСклад = Элементы.Добавить(ИмяРеквизитаОстаткиСклад, Тип("ПолеФормы"), ТаблицаОстатки);
	КолонкаОстаткиСклад.ПутьКДанным = ИмяРеквизитаСписокОстатки + "." + ИмяРеквизитаОстаткиСклад;
	КолонкаОстаткиСклад.Ширина = 10;

	КолонкаОстаткиСвободно = Элементы.Добавить(ИмяРеквизитаОстаткиСвободно, Тип("ПолеФормы"), ТаблицаОстатки);
	КолонкаОстаткиСвободно.ПутьКДанным = ИмяРеквизитаСписокОстатки + "." + ИмяРеквизитаОстаткиСвободно;
	КолонкаОстаткиСвободно.Ширина = 6;

	КолонкаОстаткиВРезерве = Элементы.Добавить(ИмяРеквизитаОстаткиВРезерве, Тип("ПолеФормы"), ТаблицаОстатки);
	КолонкаОстаткиВРезерве.ПутьКДанным = ИмяРеквизитаСписокОстатки + "." + ИмяРеквизитаОстаткиВРезерве;
	КолонкаОстаткиВРезерве.Заголовок = НСтр("ru = 'резерв'");
	КолонкаОстаткиВРезерве.Ширина = 6;

	КолонкаОстаткиВПути = Элементы.Добавить(ИмяРеквизитаОстаткиВПути, Тип("ПолеФормы"), ТаблицаОстатки);
	КолонкаОстаткиВПути.ПутьКДанным = ИмяРеквизитаСписокОстатки + "." + ИмяРеквизитаОстаткиВПути;
	КолонкаОстаткиВПути.Заголовок = НСтр("ru = 'в пути'");
	КолонкаОстаткиВПути.Ширина = 6;

	// Добавление таблицы формы ДКА_Запасы
	ТаблицаЗапасы = Элементы.Добавить(ИмяРеквизитаСписокЗапасы, Тип("ТаблицаФормы"), ГруппаФормы);
	ТаблицаЗапасы.ПутьКДанным = ИмяРеквизитаСписокЗапасы;
	ТаблицаЗапасы.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаЗапасы.АвтоМаксимальнаяВысота = Истина;
	ТаблицаЗапасы.ВысотаВСтрокахТаблицы = 4;
	ТаблицаЗапасы.АвтоМаксимальнаяВысотаВСтрокахТаблицы = Истина;
	ТаблицаЗапасы.ВертикальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.НеИспользовать;
	ТаблицаЗапасы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	ТаблицаЗапасы.Заголовок = НСтр("ru = 'Поддержание запасов'");
	ТаблицаЗапасы.ШрифтЗаголовка = ШрифтыСтиля.ШрифтКнопкиВыполненияЗадачиОбычный;
	ТаблицаЗапасы.ЧередованиеЦветовСтрок = Истина;
	ТаблицаЗапасы.ТолькоПросмотр = Истина;
	ТаблицаЗапасы.Ширина = 28;

	КолонкаЗапасыСклад = Элементы.Добавить(ИмяРеквизитаЗапасыСклад, Тип("ПолеФормы"), ТаблицаЗапасы);
	КолонкаЗапасыСклад.ПутьКДанным = ИмяРеквизитаСписокЗапасы + "." + ИмяРеквизитаЗапасыСклад;
	КолонкаЗапасыСклад.Заголовок = НСтр("ru = 'склад'");
	КолонкаЗапасыСклад.Ширина = 10;

	КолонкаЗапасыMin = Элементы.Добавить(ИмяРеквизитаЗапасыMin, Тип("ПолеФормы"), ТаблицаЗапасы);
	КолонкаЗапасыMin.ПутьКДанным = ИмяРеквизитаСписокЗапасы + "." + ИмяРеквизитаЗапасыMin;
	КолонкаЗапасыMin.Заголовок = НСтр("ru = 'min'");
	КолонкаЗапасыMin.Ширина = 6;

	КолонкаЗапасыMax = Элементы.Добавить(ИмяРеквизитаЗапасыMax, Тип("ПолеФормы"), ТаблицаЗапасы);
	КолонкаЗапасыMax.ПутьКДанным = ИмяРеквизитаСписокЗапасы + "." + ИмяРеквизитаЗапасыMax;
	КолонкаЗапасыMax.Заголовок = НСтр("ru = 'max'");
	КолонкаЗапасыMax.Ширина = 6;

	// Добавление многострочного поля Применимость
	ПолеПрименимость = Элементы.Добавить(ИмяРеквизитаПрименимость, Тип("ПолеФормы"), ГруппаФормы);
	ПолеПрименимость.ПутьКДанным = ИмяРеквизитаПрименимость;
	ПолеПрименимость.Заголовок = "Применимость";
	ПолеПрименимость.ШрифтЗаголовка = ШрифтыСтиля.ШрифтКнопкиВыполненияЗадачиОбычный;
	ПолеПрименимость.Высота = 3;
	
	// Добавление картинки
	ПолеКартинка = Элементы.Добавить(ИмяРеквизитаАдресКартинки, Тип("ПолеФормы"), ГруппаФормы);
	ПолеКартинка.Вид = ВидПоляФормы.ПолеКартинки;
	ПолеКартинка.ПутьКДанным = ИмяРеквизитаАдресКартинки;
	ПолеКартинка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеКартинка.РазмерКартинки = РазмерКартинки.Пропорционально;
	ПолеКартинка.ТекстНевыбраннойКартинки = НСтр("ru = 'Картинка не задана'");
	ПолеКартинка.Подсказка = НСтр("ru = 'Основная картинка номенклатуры'");
	ПолеКартинка.Высота = 6;

КонецПроцедуры

Процедура ПриСозданииНаСервере_УстановкаЦенНоменклатуры(Форма) Экспорт

	Если Форма.Параметры.Свойство("Товары") Тогда

		Для Каждого Эл Из Форма.Параметры.Товары Цикл
			НовыйТовар = Форма.Объект.Товары.Добавить();
			НовыйТовар.Номенклатура = Эл;
		КонецЦикла;

		Форма.ИспользуетсяЦенообразование25 = Ложь;
		Форма.ВыбранныеЦеныИзменены = Истина;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДляСписка() Экспорт

	ТекстЗапроса = "ВЫБРАТЬ
				   |	1 КАК Пометка,
				   |	Каталог.Наименование КАК ПредставлениеМодели,
				   |	Каталог.Код КАК КодМодели,
				   |	Каталог.Ссылка КАК Ссылка
				   |ПОМЕСТИТЬ ВТМарки
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	0,
				   |	Каталог.Родитель.Наименование,
				   |	Каталог.Родитель.Код,
				   |	Каталог.Родитель.Ссылка
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	0,
				   |	Каталог.Родитель.Родитель.Наименование,
				   |	Каталог.Родитель.Родитель.Код,
				   |	Каталог.Родитель.Родитель.Ссылка
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	0,
				   |	Каталог.Родитель.Родитель.Родитель.Наименование,
				   |	Каталог.Родитель.Родитель.Родитель.Код,
				   |	Каталог.Родитель.Родитель.Родитель.Ссылка
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	0,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Наименование,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Код,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Ссылка
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	0,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Родитель.Наименование,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Родитель.Код,
				   |	Каталог.Родитель.Родитель.Родитель.Родитель.Родитель.Ссылка
				   |ИЗ
				   |	Справочник.АА_КаталогАвтомобилей КАК Каталог
				   |ГДЕ
				   |	Каталог.Код В (&СписокКодов)
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	ВЫРАЗИТЬ(ВТМарки.Пометка КАК ЧИСЛО(1, 0)) КАК Пометка,
				   |	ВТМарки.ПредставлениеМодели КАК ПредставлениеМодели,
				   |	ВТМарки.Ссылка КАК Ссылка
				   |ИЗ
				   |	ВТМарки КАК ВТМарки
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Ссылка ИЕРАРХИЯ";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти