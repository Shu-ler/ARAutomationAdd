//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		
#Область ПрограммныйИнтерфейс

// Данные расширенного просмотра.
// 
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура
//  СписокВидовЦен - СписокЗначений из СправочникСсылка.ВидыЦен - Список видов цен
// 
// Возвращаемое значение:
//  Структура -- Данные расширенного просмотра::
// * Остатки - Массив из Структура - Остатки
// * Применимость - Строка - Применимость по автокаталогу Avito
// * Цены - Массив из Структура - Цены
// * Картинка - Строка - Адрес двоичных данных картинки номенклатуры
// * Запасы - Массив из Структура - Товарные ограничения
Функция ДанныеРасширенногоПросмотра(Номенклатура, СписокВидовЦен) Экспорт

	Данные = Новый Структура;

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
				   |	РаспределениеЗапасов.Характеристика КАК Характеристика,
				   |	РаспределениеЗапасов.Склад КАК Склад,
				   |	СУММА(РаспределениеЗапасов.Свободно) КАК Свободно,
				   |	СУММА(РаспределениеЗапасов.ВНаличии - РаспределениеЗапасов.Свободно) КАК ВРезерве,
				   |	0 КАК ВПути
				   |ИЗ
				   |	РегистрСведений.РаспределениеЗапасов КАК РаспределениеЗапасов
				   |ГДЕ
				   |	РаспределениеЗапасов.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
				   |	И РаспределениеЗапасов.Номенклатура = &Номенклатура
				   |СГРУППИРОВАТЬ ПО
				   |	РаспределениеЗапасов.Номенклатура,
				   |	РаспределениеЗапасов.Характеристика,
				   |	РаспределениеЗапасов.Склад
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ТоварыКПоступлениюОстатки.Номенклатура,
				   |	ТоварыКПоступлениюОстатки.Характеристика,
				   |	ТоварыКПоступлениюОстатки.Склад,
				   |	0,
				   |	0,
				   |	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток
				   |ИЗ
				   |	РегистрНакопления.ТоварыКПоступлению.Остатки КАК ТоварыКПоступлениюОстатки
				   |ГДЕ
				   |	ТоварыКПоступлениюОстатки.Номенклатура = &Номенклатура
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	НоменклатураДополнительныеРеквизиты.Значение КАК Применимость
				   |ИЗ
				   |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
				   |ГДЕ
				   |	НоменклатураДополнительныеРеквизиты.Свойство = &Свойство
				   |	И НоменклатураДополнительныеРеквизиты.Ссылка = &Номенклатура
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	Цены.ВидЦены КАК ВидЦены,
				   |	Цены.Цена КАК Цена
				   |ИЗ
				   |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &Номенклатура) КАК Цены
				   |ГДЕ
				   |	Цены.ВидЦены В (&ВидыЦен)
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	Номенклатура.ФайлКартинки КАК ФайлКартинки
				   |ИЗ
				   |	Справочник.Номенклатура КАК Номенклатура
				   |ГДЕ
				   |	Номенклатура.Ссылка = &Номенклатура
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	ТоварныеОграничения.Склад КАК ЗапасыСклад,
				   |	ТоварныеОграничения.МинимальноеКоличествоЗапаса КАК min,
				   |	ТоварныеОграничения.МаксимальноеКоличествоЗапаса КАК max
				   |ИЗ
				   |	РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
				   |ГДЕ
				   |	ТоварныеОграничения.Номенклатура = &Номенклатура";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Свойство", ПараметрыСеанса.АА_СвойствоНаименованиеПолное);
	Запрос.УстановитьПараметр("ВидыЦен", СписокВидовЦен);

	Блоки = Запрос.ВыполнитьПакет();
	
	// Остатки
	НаборОстатков = Новый Массив;

	Выборка = Блоки[0].Выбрать();

	Пока Выборка.Следующий() Цикл

		Элемент = Новый Структура("Склад, Свободно, ВРезерве", Выборка.Склад, Выборка.Свободно, Выборка.ВРезерве);
		Элемент.Вставить("ВПути", Выборка.ВПути);
		НаборОстатков.Добавить(Элемент);

	КонецЦикла;

	Данные.Вставить("Остатки", НаборОстатков);
	
	// Применимость
	Выборка = Блоки[1].Выбрать();

	Если Выборка.Следующий() И Не ПустаяСтрока(Выборка.Применимость) Тогда
		Применимость = СтрЗаменить(Выборка.Применимость, " / ", Символы.ПС);
	Иначе
		Применимость = "Модели по автокаталогу не назначены";
	КонецЕсли;

	Данные.Вставить("Применимость", Применимость);
	
	// Цены
	НаборЦен = Новый Массив;

	Выборка = Блоки[2].Выбрать();

	Для Каждого Эл Из СписокВидовЦен Цикл
	
		Если Выборка.НайтиСледующий(Эл.Значение, "ВидЦены") Тогда
			НаборЦен.Добавить(Новый Структура("ВидЦены, Цена", Выборка.ВидЦены, Выборка.Цена));
		КонецЕсли;	

		Выборка.Сбросить();
				
	КонецЦикла;

	Данные.Вставить("Цены", НаборЦен);

	// Картинка
	Выборка = Блоки[3].Выбрать();

	Картинка = "";

	Если Выборка.Следующий() И Не Выборка.ФайлКартинки.Пустая() Тогда

		УстановитьПривилегированныйРежим(Истина);
		Попытка
			Картинка = РаботаСФайлами.ДанныеФайла(Выборка.ФайлКартинки).СсылкаНаДвоичныеДанныеФайла;
		Исключение
			Картинка = "";
		КонецПопытки;
		УстановитьПривилегированныйРежим(Ложь);

	КонецЕсли;

	Данные.Вставить("Картинка", Картинка);

	// Товарные ограничения
	НаборТоварныхОграничений = Новый Массив;

	Выборка = Блоки[4].Выбрать();

	Пока Выборка.Следующий() Цикл
		НаборТоварныхОграничений.Добавить(Новый Структура("ЗапасыСклад, min, max",
														  Выборка.ЗапасыСклад,
														  Выборка.min,
														  Выборка.max));
	КонецЦикла;

	Данные.Вставить("Запасы", НаборТоварныхОграничений);

	Возврат Данные;

КонецФункции

Функция ПоследнийДокументУстановкиЦен(Номенклатура, ВидЦены) Экспорт

	ТекстЗапроса = "ВЫБРАТЬ
				   |	ЦеныНоменклатуры.Регистратор КАК Ссылка
				   |ИЗ
				   |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
				   |ГДЕ
				   |	ЦеныНоменклатуры.Номенклатура = &Номенклатура
				   |	И ЦеныНоменклатуры.ВидЦены = &ВидЦены
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	ЦеныНоменклатуры.Период УБЫВ";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		Ссылка = Выборка.Ссылка;
	Иначе
		Ссылка = Документы.УстановкаЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;

	Возврат Ссылка;

КонецФункции

#Область Устарело

// Возвращает последние цены номенклатуры
// 
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура
// 
// Возвращаемое значение:
//  Массив из Структура:
//	* ВидЦены - СправочникСсылка.ВидыЦен - Вид цены
//	* Цена - Число - Цена
Функция ЦеныНоменклатуры(Номенклатура) Экспорт

	НаборЦен = Новый Массив;

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	Цены.ВидЦены КАК ВидЦены,
				   |	Цены.Цена КАК Цена
				   |ИЗ
				   |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &Номенклатура) КАК Цены";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		НаборЦен.Добавить(Новый Структура("ВидЦены, Цена", Выборка.ВидЦены, Выборка.Цена));
	КонецЦикла;

	Возврат НаборЦен;

КонецФункции

// Возвращает остатки номенклатуры
// 
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - Номенклатура
// 
// Возвращаемое значение:
//  Массив из Структура:
//	* ВидЦены - СправочникСсылка.ВидыЦен - Вид цены
//	* Цена - Число - Цена
Функция ОстаткиНоменклатуры(Номенклатура) Экспорт

	НаборОстатков = Новый Массив;

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
				   |	РаспределениеЗапасов.Характеристика КАК Характеристика,
				   |	РаспределениеЗапасов.Склад КАК Склад,
				   |	СУММА(РаспределениеЗапасов.Свободно) КАК Свободно,
				   |	СУММА(РаспределениеЗапасов.ВНаличии - РаспределениеЗапасов.Свободно) КАК ВРезерве,
				   |	0 КАК ВПути
				   |ИЗ
				   |	РегистрСведений.РаспределениеЗапасов КАК РаспределениеЗапасов
				   |ГДЕ
				   |	РаспределениеЗапасов.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
				   |	И РаспределениеЗапасов.Номенклатура = &Номенклатура
				   |СГРУППИРОВАТЬ ПО
				   |	РаспределениеЗапасов.Номенклатура,
				   |	РаспределениеЗапасов.Характеристика,
				   |	РаспределениеЗапасов.Склад
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   |ВЫБРАТЬ
				   |	ТоварыКПоступлениюОстатки.Номенклатура,
				   |	ТоварыКПоступлениюОстатки.Характеристика,
				   |	ТоварыКПоступлениюОстатки.Склад,
				   |	0,
				   |	0,
				   |	ТоварыКПоступлениюОстатки.КОформлениюПоступленийПоНакладнымОстаток
				   |ИЗ
				   |	РегистрНакопления.ТоварыКПоступлению.Остатки КАК ТоварыКПоступлениюОстатки
				   |ГДЕ
				   |	ТоварыКПоступлениюОстатки.Номенклатура = &Номенклатура";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		НаборОстатков.Добавить(Новый Структура("Склад, Свободно, ВРезерве, ВПути",
											   Выборка.Склад,
											   Выборка.Свободно,
											   Выборка.ВРезерве,
											   Выборка.ВПути));
	КонецЦикла;

	Возврат НаборОстатков;

КонецФункции

Функция Применимость(Номенклатура) Экспорт

	ТекстЗапроса = "ВЫБРАТЬ
				   |	НоменклатураДополнительныеРеквизиты.Значение КАК Применимость
				   |ИЗ
				   |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
				   |ГДЕ
				   |	НоменклатураДополнительныеРеквизиты.Свойство = &Свойство
				   |	И НоменклатураДополнительныеРеквизиты.Ссылка = &Номенклатура";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Свойство", ПараметрыСеанса.АА_СвойствоНаименованиеПолное);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() И Не ПустаяСтрока(Выборка.Применимость) Тогда
		Результат = СтрЗаменить(Выборка.Применимость, " / ", Символы.ПС);
	Иначе
		Результат = "Модели по автокаталогу не назначены";
	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти

#КонецОбласти