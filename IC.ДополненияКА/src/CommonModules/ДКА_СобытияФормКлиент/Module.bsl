//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		

// @strict-types

//@skip-check dynamic-access-method-not-found
//@skip-check invocation-parameter-type-intersect
//@skip-check unknown-method-property
#Область ПрограммныйИнтерфейс

// Обработчик одноименного события для общего модуля ПодборТоваровКлиент
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
Процедура УстановитьТекущуюСтрокуИерархииНоменклатуры(Форма) Экспорт

	Имена = ДКА_ФормыОбъектовКлиентСервер.КонстантыФормыСпискаНоменклатуры();

	Если Форма[Имена.РеквизитПоказыватьЦеныИОстатки] Тогда
		
		// Разыменования
		ИмяСписка = ПодборТоваровКлиентСервер.ИмяСпискаНоменклатурыПоВариантуПоиска(Форма);
		Номенклатура = Форма.Элементы[ИмяСписка].ТекущаяСтрока;
		
		РеквизитТаблицаЦен = РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокЦены);
		РеквизитТаблицаОстатки = РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокОстатки);
		РеквизитТаблицаЗапасы = РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокЗапасы);

		// Получение списка видов цен
		СписокВидовЦен = СписокВидовЦен(Форма, Имена.РеквизитВыбранныеВидыЦен);
		
		// Получение данных для расширенного представления
		Данные = ДКА_СобытияФормВызовСервера.ДанныеРасширенногоПросмотра(Номенклатура, СписокВидовЦен);
		
		// Перенос цен в реквизит формы ДКА_Цены
		РеквизитТаблицаЦен.Очистить();

		Для Каждого Эл Из Данные.Цены Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаЦен.Добавить(), Эл);
		КонецЦикла;

		// Перенос цен в реквизит формы ДКА_Цены
		РеквизитТаблицаОстатки.Очистить();

		Для Каждого Эл Из Данные.Остатки Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаОстатки.Добавить(), Эл);
		КонецЦикла;

		// Перенос товарных ограничений в реквизит формы ДКА_Запасы
		РеквизитТаблицаЗапасы.Очистить();

		Для Каждого Эл Из Данные.Запасы Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаЗапасы.Добавить(), Эл);
		КонецЦикла;

		// Получение применимости
		Форма[Имена.РеквизитПрименимость] = Данные.Применимость;
		
		// Получение картинки
		Форма[Имена.РеквизитАдресКартинки] = Данные.Картинка;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает список выбранных видов цен.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма
//  ИмяСписка - Строка -  Имя списка
// 
// Возвращаемое значение:
// 	СписокЗначений из СправочникСсылка.ВидыЦен - Список видов цен
Функция СписокВидовЦен(Форма, ИмяСписка)
	Возврат Форма[ИмяСписка];
КонецФункции

// Возвращает реквизит (таблицу значений) по имени.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения -  Форма
//  ИмяТаблицы - Строка - Имя таблицы
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений
Функция РеквизитТаблицаЗначений(Форма, ИмяТаблицы)
	Возврат Форма[ИмяТаблицы];
КонецФункции

#КонецОбласти