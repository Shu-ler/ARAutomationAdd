// @strict-types
#Область ПрограммныйИнтерфейс

// Обработчик одноименного события для общего модуля ПодборТоваровКлиент
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
//@skip-check dynamic-access-method-not-found
//@skip-check invocation-parameter-type-intersect
Процедура УстановитьТекущуюСтрокуИерархииНоменклатуры(Форма) Экспорт

	Имена = ДКА_ФормыОбъектовКлиентСервер.КонстантыФормыСпискаНоменклатуры();

	Если Форма[Имена.РеквизитПоказыватьЦеныИОстатки] Тогда
		
		// Разыменования
		ИмяСписка = ПодборТоваровКлиентСервер.ИмяСпискаНоменклатурыПоВариантуПоиска(Форма);
		Номенклатура = Форма.Элементы[ИмяСписка].ТекущаяСтрока;
		
		РеквизитТаблицаЦен = Форма[Имена.РеквизитСписокЦены];
		РеквизитТаблицаОстатки = Форма[Имена.РеквизитСписокОстатки];
		РеквизитТаблицаЗапасы = Форма[Имена.РеквизитСписокЗапасы];

		// Получение списка видов цен
		СписокВидовЦен = Форма[Имена.РеквизитВыбранныеВидыЦен];
		
		// Получение данных для расширенного представления
		Данные = ДКА_СобытияФормВызовСервера.ДанныеРасширенногоПросмотра(Номенклатура, СписокВидовЦен);
		
		// Перенос цен в реквизит формы ДКА_Цены
		РеквизитТаблицаЦен.Очистить();

		Для Каждого Эл Из Данные.Цены Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаЦен.Добавить(), Эл);
		КонецЦикла;

		// Перенос цен в реквизит формы ДКА_Цены
		РеквизитТаблицаОстатки.Очистить();

		Для Каждого Эл Из Данные.Остатки Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаОстатки.Добавить(), Эл);
		КонецЦикла;

		// Перенос товарных ограничений в реквизит формы ДКА_Запасы
		РеквизитТаблицаЗапасы.Очистить();

		Для Каждого Эл Из Данные.Запасы Цикл
			ЗаполнитьЗначенияСвойств(РеквизитТаблицаЗапасы.Добавить(), Эл);
		КонецЦикла;

		// Получение применимости
		Форма[Имена.РеквизитПрименимость] = Данные.Применимость;
		
		// Получение картинки
		Форма[Имена.РеквизитАдресКартинки] = Данные.Картинка;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти