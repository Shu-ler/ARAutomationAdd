// @strict-types

//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		

#Область ПрограммныйИнтерфейс

// Обработчик одноименного события для общего модуля ПодборТоваровКлиент
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
Процедура УстановитьТекущуюСтрокуИерархииНоменклатуры(Форма) Экспорт

	Имена = ДКА_ФормыОбъектовКлиентСервер.КонстантыФормыСпискаНоменклатуры();

	Если Форма[Имена.РеквизитПоказыватьЦеныИОстатки] Тогда
		
		// Разыменования
		РеквизитТаблицаЦен = ДКА_СтдФормыКлиентСервер.РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокЦены);
		РеквизитТаблицаОстатки = ДКА_СтдФормыКлиентСервер.РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокОстатки);
		РеквизитТаблицаЗапасы = ДКА_СтдФормыКлиентСервер.РеквизитТаблицаЗначений(Форма, Имена.РеквизитСписокЗапасы);
		СписокВидовЦен = ДКА_СтдФормыКлиентСервер.РеквизитСписокЗначений(Форма, Имена.РеквизитВыбранныеВидыЦен);

		Номенклатура = ТекущаяНоменклатура(Форма);
		
		// Получение данных для расширенного представления
		Данные = ДКА_СобытияФормВызовСервера.ДанныеРасширенногоПросмотра(Номенклатура, СписокВидовЦен);
		
		// Перенос цен в реквизит формы ДКА_Цены
		ЗагрузитьВТаблицу(Данные.Цены, РеквизитТаблицаЦен);

		// Перенос остатков в реквизит формы ДКА_Остатки
		ЗагрузитьВТаблицу(Данные.Остатки, РеквизитТаблицаОстатки);

		// Перенос товарных ограничений в реквизит формы ДКА_Запасы
		ЗагрузитьВТаблицу(Данные.Запасы, РеквизитТаблицаЗапасы);

		// Установка применимости
		Форма[Имена.РеквизитПрименимость] = Данные.Применимость;
		
		// Установка картинки
		Форма[Имена.РеквизитАдресКартинки] = Данные.Картинка;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

//@skip-check unknown-method-property
#Область СлужебныеПроцедурыИФункции

// Копирует содержимое исходной таблицы (массива) в таблицу значений
// 
// Параметры:
//  ИсходнаяТаблица - Массив из Произвольный -  Исходная таблица
//  ЦелеваяТаблица - ТаблицаЗначений -  Целевая таблица
Процедура ЗагрузитьВТаблицу(ИсходнаяТаблица, ЦелеваяТаблица)

	ЦелеваяТаблица.Очистить();

	Для Каждого Эл Из ИсходнаяТаблица Цикл
		ЗаполнитьЗначенияСвойств(ЦелеваяТаблица.Добавить(), Эл);
	КонецЦикла;

КонецПроцедуры

// Возвращает текущую номенклатуру
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма
// 
// Возвращаемое значение:
//  СправочникСсылка.Номенклатура - Текущая номенклатура
Функция ТекущаяНоменклатура(Форма)

	ИмяСписка = ПодборТоваровКлиентСервер.ИмяСпискаНоменклатурыПоВариантуПоиска(Форма);
	Номенклатура = Форма.Элементы[ИмяСписка].ТекущаяСтрока;

	Возврат Номенклатура;

КонецФункции

#КонецОбласти