//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		
#Область ПрограммныйИнтерфейс

Процедура УстановкаЦенНовыйДокумент(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт

	ФормаВладелец = ПараметрыВыполненияКоманды.Форма;

	Параметры = Новый Структура("Товары", ПараметрКоманды);

	ДополнительныеПараметры = Новый Структура("Идентификатор", ПараметрыВыполненияКоманды.ОписаниеКоманды.Идентификатор);
	ДополнительныеПараметры.Вставить("Форма", ФормаВладелец);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВыполненияКомандПанели",
												  ЭтотОбъект,
												  ДополнительныеПараметры);

	ОткрытьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаДокумента",
				 Параметры,
				 ФормаВладелец,
				 ФормаВладелец.УникальныйИдентификатор,
				 ,
				 ,
				 ОписаниеОповещения,
				 РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

Процедура ИзменениеПоследнейУстановкиЦен(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт

	ФормаВладелец = ПараметрыВыполненияКоманды.Форма;

	ВидЦены = ФормаВладелец.Элементы["ДКА_Цены"].ТекущиеДанные["ВидЦены"];
	ДокументУстановки = ДКА_СобытияФормВызовСервера.ПоследнийДокументУстановкиЦен(ПараметрКоманды, ВидЦены);

	Параметры = Новый Структура("Ключ", ДокументУстановки);

	ДополнительныеПараметры = Новый Структура("Идентификатор", ПараметрыВыполненияКоманды.ОписаниеКоманды.Идентификатор);
	ДополнительныеПараметры.Вставить("Форма", ФормаВладелец);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВыполненияКомандПанели",
												  ЭтотОбъект,
												  ДополнительныеПараметры);

	ОткрытьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаДокумента",
				 Параметры,
				 ФормаВладелец,
				 ФормаВладелец.УникальныйИдентификатор,
				 ,
				 ,
				 ОписаниеОповещения,
				 РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

Процедура Настройки(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт

	ФормаВладелец = ПараметрыВыполненияКоманды.Форма;

	Параметры = Новый Структура("Товары", ПараметрКоманды);

	ДополнительныеПараметры = Новый Структура("Форма", ФормаВладелец);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВыполненияКомандПанели",
												  ЭтотОбъект,
												  ДополнительныеПараметры);

	ОткрытьФорму("ОбщаяФорма.ДКА_РасширениеСпискаНоменклатуры",
				 Параметры,
				 ФормаВладелец,
				 ФормаВладелец.УникальныйИдентификатор,
				 ,
				 ,
				 ОписаниеОповещения,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ЗавершениеВыполненияКомандПанели(Результат, ДополнительныеПараметры) Экспорт

	Форма = ДополнительныеПараметры.Форма;

	Если ТипЗнч(Результат) = Тип("Структура") Тогда

		// Получение имен для формы
		Имена = ДКА_ФормыОбъектовКлиентСервер.КонстантыФормыСпискаНоменклатуры();

		// Разыменование
		Элементы = Форма.Элементы;
		РеквизитВыбранныеВидыЦен = Форма[Имена.РеквизитВыбранныеВидыЦен];
		
		// Установка видимости элементов
		Элементы[Имена.РеквизитАдресКартинки].Видимость = Результат.ПоказатьКартинку;
		Элементы[Имена.РеквизитПрименимость].Видимость = Результат.ПоказатьПрименимость;
		Элементы[Имена.РеквизитСписокЗапасы].Видимость = Результат.ПоказатьЗапасы;

		РеквизитВыбранныеВидыЦен.Очистить();
		
		Для Каждого Эл Из Результат.ВидыЦен Цикл
			РеквизитВыбранныеВидыЦен.Добавить(Эл.Значение);	
		КонецЦикла;
		
		ДКА_СобытияФормКлиент.УстановитьТекущуюСтрокуИерархииНоменклатуры(Форма);

	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда

	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("Идентификатор") Тогда

		ДКА_СобытияФормКлиент.УстановитьТекущуюСтрокуИерархииНоменклатуры(Форма);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти