// @strict-types
 
//
//	Филимонов И.В.
//		+7 913 240 81 77
//		+7 905 084 20 06 (Telegram)
//		https://github.com/Shu-ler
//		

#Область ПрограммныйИнтерфейс

// Изменение шаблонов наименований.
// 
// Параметры:
//  Аргументы - Структура - Аргументы:
// * ИскомыйТекст - Строка - Искомый текст для замены
// * Замена - Строка - Текст замены
// * Свойство - ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения -
// * ТипНаименования - Строка -
// * УникальныйИдентификатор - УникальныйИдентификатор -
// 
// Возвращаемое значение:
//  Структура - Изменение шаблонов наименований:
// * Всего - Число - Количество обработанных элементов
// * Ошибки - Число - Количество ошибок
Функция ИзменениеШаблоновНаименований(Аргументы) Экспорт

	ВидОбъект = Справочники.ВидыНоменклатуры.ПустаяСсылка();

	Итоги = Новый Структура("Всего, Ошибки", 0, 0);
	Счетчик = 1;

	ИмяРеквизита = ?(Аргументы.ТипНаименования = "Рабочее",
					 "ШаблонРабочегоНаименованияНоменклатуры",
					 "ШаблонНаименованияДляПечатиНоменклатуры");

	Выборка = ВидыНоменклатуры();
	Итоги.Всего = Выборка.Количество();

	Пока Выборка.Следующий() Цикл

		ТекущийВидСсылка = Выборка.Ссылка;
		ВидОбъект = ТекущийВидСсылка.ПолучитьОбъект();
		//@skip-check invocation-parameter-type-intersect
		ВидОбъект[ИмяРеквизита] = СтрЗаменить(ВидОбъект[ИмяРеквизита], Аргументы.ИскомыйТекст, Аргументы.Замена);

		Попытка
			ВидОбъект.Записать();
			Счетчик = Счетчик + 1;
		Исключение
			Итоги.Ошибки = Итоги.Ошибки + 1;
		КонецПопытки;

		ДлительныеОперации.СообщитьПрогресс(Окр((Счетчик + Итоги.Ошибки) / Итоги.Всего, 0));

	КонецЦикла;

	Возврат Итоги;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает выборку видов номенклатуры
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса:
//		* Ссылка - СправочникСсылка.ВидыНоменклатуры - Вид номенклатуры
Функция ВидыНоменклатуры()

	ТекстЗапроса = "ВЫБРАТЬ
				   |	ВидыНоменклатуры.Ссылка КАК Ссылка
				   |ИЗ
				   |	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
				   |ГДЕ
				   |	ВидыНоменклатуры.ПометкаУдаления = ЛОЖЬ
				   |	И ВидыНоменклатуры.ЭтоГруппа = ЛОЖЬ";
	Запрос = Новый Запрос(ТекстЗапроса);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка
	
КонецФункции


#КонецОбласти